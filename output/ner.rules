# make all patterns case-sensitive
ENV.defaultStringMatchFlags = 0
ENV.defaultStringPatternFlags = 0

# these Java classes will be used by the rules
ner = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$NamedEntityTagAnnotation" }
tokens = { type: "CLASS", value: "edu.stanford.nlp.ling.CoreAnnotations$TokensAnnotation" }

{ ruleType: "tokens", pattern: ([{word:/(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/}]), action: Annotate($0, ner, "ip"), result: "ip" }
{ ruleType: "tokens", pattern: ([{word:/port/}] + ([{word:/(\d{1,5})/}])), action: Annotate($1, ner, "port"), result: "port" }
{ ruleType: "tokens", pattern: ([{word:/hostname/}] + [{word:/:|-|=|\s/}]? ([{word:/(\w+)/}])), action: Annotate($1, ner, "host"), result: "host" }
{ ruleType: "tokens", pattern: ([{word:/((?!-)[A-Za-z0-9-]{1,63}(?<!-)\.)+[A-Za-z]{2,6}/}]), action: Annotate($0, ner, "domain"), result: "domain" }
{ ruleType: "tokens", pattern: ([{word:/r?[uU]ser/}]+ [{word:/:|-|=|\s/}]? ([{word:/\<?(\w+)\>?/}])), action: Annotate($1, ner, "user"), result: "user" }
{ ruleType: "tokens", pattern: ([{word:/pid/}]+ [{word:/:|-|=|\s/}] ([{word:/(\d+)/}])), action: Annotate($1, ner, "pid"), result: "pid" }
{ ruleType: "tokens", pattern: ([{word:/password/}] [{word:/for/}] ([{word:/(\w+)/}])), action: Annotate($1, ner, "userPassword"), result: "userPassword" }
{ ruleType: "tokens", pattern: ([{word:/^<?[a-zA-Z0-9.!#$%&'*+\/?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*>?$/}]), action: Annotate($0, ner, "email"), result: "email" }
